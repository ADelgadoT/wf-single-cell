{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-sockeye",
    "description": "Nextflow workflow template repository.",
    "url": "https://github.com/epi2me-labs/wf-sockeye",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all user-facing files."
                },
                "sample": {
                    "type": "string",
                    "description": "A sample name for non-multiplexed data. Permissible if passing a file or directory of .fastq(.gz)."
                },
                "sample_sheet": {
                    "type": "string",
                    "description": "CSV file with columns named `barcode`, `sample_name` and `type`. Permissible if passing a directory containing barcodeXX sub-directories. Barcodes here referes to nanopore sample barcodes"
                },
                "single_cell_sample_sheet": {
                    "type": "string",
                    "description": "A csv containing colums: sample_nam,kit_name,kit_version,path, sample_name should correspond to a folder of fastq files or the sample_name column in 1sample_shee`",
                    "format": "file-path"
                },
                "kit_config": {
                    "type": "string",
                    "format": "path",
                    "description": "10x git config"
                },
                "ref_genome_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The path to the reference directory as downloaded from 10x"
                },
                "sanitize_fastq": {
                    "type": "boolean",
                    "description": "Use additional heuristics to identify barcodes from file paths.",
                    "help_text": "Enabling this option will group together files into samples by the presence of strings of the form `barcodeXXX` present in filenames, rather than simply files grouped into directories (as output by MinKNOW and the Guppy basecaller)."
                }
            },
            "required": [
                "single_cell_sample_sheet",
                "ref_genome_dir"
            ]
        },
        "advanced_options": {
            "title": "Advanced options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define more advanced options for tweaking the workflow.",
            "properties": {
                "max_threads": {
                    "type": "integer",
                    "description": "Maximum number of threads to use",
                    "default": 24
                },
                "read_structure_batch_size": {
                    "type": "integer",
                    "description": "?",
                    "default": 40000
                },
                "read_structure_flags": {
                    "type": "string",
                    "description": "?",
                    "default": ""
                },
                "barcode_adapter1_suff_length": {
                    "type": "integer",
                    "description": "?",
                    "default": 10
                },
                "barcode_kneeplot_flags": {
                    "type": "string",
                    "description": "?",
                    "default": null
                },
                "barcode_max_ed": {
                    "type": "integer",
                    "description": "maximum edit distance for barcode identification?",
                    "default": 2
                },
                "barcode_min_ed_diff": {
                    "type": "integer",
                    "description": "minimum edit distance for barcode identification?",
                    "default": 2
                },
                "gene_assigns_minqv": {
                    "type": "integer",
                    "description": "?",
                    "default": 60
                },
                "umi_genomic_interval": {
                    "type": "integer",
                    "description": "?",
                    "default": 1000
                },
                "umi_cell_gene_max_reads": {
                    "type": "integer",
                    "description": "?",
                    "default": 20000
                },
                "umi_cluster_max_threads": {
                    "type": "integer",
                    "description": "Maximum number of threads to use in UMI clustering step",
                    "default": 8
                },
                "matrix_min_genes": {
                    "type": "integer",
                    "description": "?",
                    "default": 25
                },
                "matrix_min_cells": {
                    "type": "integer",
                    "description": "?",
                    "default": 3
                },
                "matrix_max_mito": {
                    "type": "integer",
                    "description": "?",
                    "default": 20
                },
                "matrix_norm_count": {
                    "type": "integer",
                    "description": "?",
                    "default": 10000
                },
                "umap_plot_genes": {
                    "type": "string",
                    "format": "path",
                    "description": "List of gene symbols to perform UMI clustering on."
                },
                "resources_mm2_mem_gb": {
                    "type": "integer",
                    "description": "Maximum allowed memory in GB for the minimp2 stage. NOTE: Do we need this for wf-sockeye?",
                    "default": 50
                },
                "resources_mm2_max_threads": {
                    "type": "integer",
                    "description": "Maximum allowed threads for the minimp2 stage. NOTE: Do we need this for wf-sockeye?",
                    "default": 12
                }
            }
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Enable to prevent sending a workflow ping."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/advanced_options"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "wf-sockeye"
        },
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v0.2.0",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThe following single-cell kits from 10x Genomics are currently supported:\n- Chromium Single Cell [3\u02b9 gene expression](https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium3.html), versions 2 and 3\n- Chromium Single Cell [5\u02b9 gene expression](https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium5.html), version 1\n- Chromium Single Cell [Multiome (ATAC + GEX)](https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium_multiome.html), version 1\n\nOxford Nanopore has developed a protocol for sequencing single-cell libraries from 10X, which can be found on the Nanopore Community [website](https://community.nanoporetech.com/docs/prepare/library_prep_protocols/single-cell-transcriptomics-10x/v/sst_v9148_v111_revb_12jan2022).\n\nThe inputs to Sockeye are raw nanopore reads (FASTQ) generated from the sequencing\ninstrument and reference files that can be downloaded from [10X](https://support.10xgenomics.com/single-cell-gene-expression/software/downloads/latest).\nThe pipeline outputs a gene x cell expression matrix, as well as a BAM file of\naligned reads tagged with cell barcode and UMI information.\n\nPackage dependencies\n--------------------\n\nThe wf-single-cell pipeline makes use of the following dependencies.\n\n- bedtools\n- bioframe\n- biopython\n- editdistance\n- matplotlib\n- minimap2\n- numpy\n- pandas\n- parasail-python\n- pysam\n- samtools\n- scikit-learn\n- seqkit\n- tqdm\n- umap-learn\n- vsearch\n\nAdditionally, while no explicit dependency exists for the\n[UMI-tools](https://github.com/CGATOxford/UMI-tools) package, the script\n``bin/cluster_umis.py`` makes significant use of several functions from\nthe package. More detailed acknowledgements can be found in the source code.\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n"
    }
}