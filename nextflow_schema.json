{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-single-cell",
    "description": "Identification of cell barcodend UMI sequences present in nanopore sequencing reads.",
    "url": "https://github.com/epi2me-labs/wf-single-cell",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all user-facing files."
                },
                "fastq": {
                    "type": "string",
                    "format": "path",
                    "description": "A fastq file or directory containing fastq input files or directories of input files.",
                    "help_text": "If directories named \\\"barcode*\\\" are found under the `--fastq` directory the data is assumed to be multiplex and each barcode directory will be processed independently. If `.fastq(.gz)` files are found under the `--fastq` directory the sample is assumed to not be multiplexed. In this second case `--samples` should be a simple name rather than a CSV file."
                },
                "sample": {
                    "type": "string",
                    "description": "A sample name for non-multiplexed data. Permissible if passing a file or directory of .fastq(.gz)."
                },
                "sample_sheet": {
                    "type": "string",
                    "description": "CSV file with columns named `barcode`, `sample_name` and `type`. Permissible if passing a directory containing barcodeXX sub-directories. Barcodes here referes to nanopore sample barcodes"
                },
                "single_cell_sample_sheet": {
                    "type": "string",
                    "description": "The single-cell-sample sheet associates the samples with 10x kits that were used to process them. This is separate to the MinKNOW sample sheet. The sample_id should correspond to sample_name which is defined either in the `sample_sheet`, given by the `sample` parameter (for single sample runs) or if no `sample_sheet` or `sample` is given, is derived from the folder name containing the fastq files.",
                    "format": "file-path"
                },
                "kit_config": {
                    "type": "string",
                    "format": "path",
                    "description": "Path to file defining the configurations associated with the various supported 10x kits."
                },
                "ref_genome_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The path to the reference directory as downloaded from 10x (e.g. /path/to/refdata-gex-GRCh38-2020-A)"
                },
                "merge_bam": {
                    "type": "boolean",
                    "description": "Merge bams from each chromosome into a single file per sample. If not set, output a bam per chromosome.",
                    "default": false
                },
                "kit_name": {
                    "type": "string",
                    "description": "10x kit name",
                    "default": "3prime"
                },
                "kit_version": {
                    "type": "string",
                    "description": "10x kit version",
                    "default": "v3"
                },
                "expected_cells": {
                    "type": "integer",
                    "description": "Number of expected cells.",
                    "help_text": "If unknown 500 is a good number",
                    "default": 500
                }
            },
            "required": [
                "fastq",
                "ref_genome_dir"
            ]
        },
        "advanced_options": {
            "title": "Advanced options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define more advanced options for tweaking the workflow.",
            "properties": {
                "max_threads": {
                    "type": "integer",
                    "description": "Maximum number of threads to use",
                    "default": 4
                },
                "read_structure_batch_size": {
                    "type": "integer",
                    "description": "Batch size when processing reads using adapter_scan_vsearch.py (changing not recommended).",
                    "default": 40000
                },
                "barcode_adapter1_suff_length": {
                    "type": "integer",
                    "description": "Suffix length of the read1 adapter to use in creating the probe sequence for identifying barcode/UMI bases.",
                    "default": 10
                },
                "barcode_min_quality": {
                    "type": "integer",
                    "description": "Minimum allowed nucleotide-level quality score in the extracted/uncorrected barcode sequence for the barcode to be considered 'high-quality' (i.e. used in generating the knee plot).",
                    "default": 15
                },
                "barcode_max_ed": {
                    "type": "integer",
                    "description": "Maximum allowable edit distance between uncorrected barcode and the best matching corrected barcode from the sample whitelist.",
                    "default": 2
                },
                "barcode_min_ed_diff": {
                    "type": "integer",
                    "description": "Minimum allowable edit distance difference between the first- and second-best matching corrected barcodes from the sample whitelist.",
                    "default": 2
                },
                "gene_assigns_minqv": {
                    "type": "integer",
                    "description": "Minimum alignment qscore allowed for a read to be assigned to a gene or genomic region.",
                    "default": 60
                },
                "umi_genomic_interval": {
                    "type": "integer",
                    "description": "Size of genomic window (bp) to assign to a read if alignment falls outside of an annotated gene.",
                    "default": 1000
                },
                "umi_cell_gene_max_reads": {
                    "type": "integer",
                    "description": "Maximum number of reads to cluster for a particular barcode/gene combination.",
                    "default": 20000
                },
                "umi_cluster_max_threads": {
                    "type": "integer",
                    "description": "Maximum number of threads to use per-chromosome in UMI clustering step.",
                    "default": 4
                },
                "matrix_min_genes": {
                    "type": "integer",
                    "description": "Filter cells from the gene expression matrix if they contain fewer than <matrix_min_genes> genes.",
                    "default": 25
                },
                "matrix_min_cells": {
                    "type": "integer",
                    "description": "Filter genes from the gene expression matrix that are observed in fewer than <matrix_min_cells> cells.",
                    "default": 3
                },
                "matrix_max_mito": {
                    "type": "integer",
                    "description": "Filter cells from the gene expression matrix if more than <matrix_max_mito> percent of UMI counts come from mitochondrial genes.",
                    "default": 20
                },
                "matrix_norm_count": {
                    "type": "integer",
                    "description": "Normalize expression matrix to <matrix_norm_count> counts per cell.",
                    "default": 10000
                },
                "umap_plot_genes": {
                    "type": "string",
                    "format": "path",
                    "description": "File containing a list of gene symbols (one symbol per line) to annotate with expression values in the UMAP projections."
                },
                "resources_mm2_max_threads": {
                    "type": "integer",
                    "description": "Maximum allowed threads for the minimap2 stage.",
                    "default": 4
                },
                "resources_mm2_flags": {
                    "type": "string",
                    "description": "Optional flags for the minimap2 stage.",
                    "default": "-I 4G"
                },
                "mm2_batch_size": {
                    "type": "integer",
                    "description": "Fastq chunk size for minimap2 alignmnent",
                    "default": 40000
                },
                "mito_prefix": {
                    "type": "string",
                    "description": "Pattern to search for mitocndrial genes. Single or ('MT-') or multiple pattern can be spcified ('MT-,mt-')",
                    "default": "MT-"
                }
            }
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/advanced_options"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "singlecell"
        },
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v0.1.4",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThe following single-cell kits from 10x Genomics are currently supported:\n- Chromium Single Cell [3\u02b9 gene expression](https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium3.html), versions 2 and 3\n- Chromium Single Cell [5\u02b9 gene expression](https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium5.html), version 1\n- Chromium Single Cell [Multiome (ATAC + GEX)](https://teichlab.github.io/scg_lib_structs/methods_html/10xChromium_multiome.html), version 1\n\nOxford Nanopore has developed a protocol for sequencing single-cell libraries from 10x, which can be found on the Nanopore Community [website](https://community.nanoporetech.com/docs/prepare/library_prep_protocols/single-cell-transcriptomics-10x/v/sst_v9148_v111_revb_12jan2022).\n\nThe inputs to Sockeye are raw nanopore reads (FASTQ) generated from the sequencing\ninstrument and reference files that can be downloaded from [10x](https://support.10xgenomics.com/single-cell-gene-expression/software/downloads/latest).\nThe pipeline output a gene x cell, and transcript x cell expression matrices, as well as a BAM file of\naligned reads tagged with cell barcode and UMI information.\n\nThe BLAZE preprint provided useful benchmarking of the original sockeye implementation. This assisted in the selection of appropriate parameters for cell cut-off thresholds and for defining the limits of the cell x gene matrix.",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n"
    }
}